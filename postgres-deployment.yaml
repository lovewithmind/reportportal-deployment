apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/reportportal: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - args:
            - -c
            - checkpoint_completion_target=0.9
            - -c
            - work_mem=96MB
            - -c
            - wal_writer_delay=20ms
            - -c
            - synchronous_commit=off
            - -c
            - wal_buffers=32MB
            - -c
            - min_wal_size=2GB
            - -c
            - max_wal_size=4GB
          env:
            - name: POSTGRES_DB
              value: reportportal
            - name: POSTGRES_PASSWORD
              value: rppass
            - name: POSTGRES_USER
              value: rpuser
          image: postgres:12.17-alpine3.17
          livenessProbe:
            exec:
              command:
                - pg_isready -d $POSTGRES_DB -U $POSTGRES_USER
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 120
          name: postgres
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres
      restartPolicy: Always
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
status: {}
